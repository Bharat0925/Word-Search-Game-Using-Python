# -*- coding: utf-8 -*-
"""Word Search Game 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZdxbFBZBksujCH_b-3n3WQLgk24aaAEC
"""

import random

def generate_word_search(words, rows, cols):
    # Initialize an empty grid
    grid = [[' ' for _ in range(cols)] for _ in range(rows)]

    # Place words in the grid
    for word in words:
        direction = random.choice(['horizontal', 'vertical', 'diagonal'])
        row, col = random.randint(0, rows - 1), random.randint(0, cols - 1)

        if direction == 'horizontal' and col + len(word) <= cols:
            for i in range(len(word)):
                grid[row][col + i] = word[i]
        elif direction == 'vertical' and row + len(word) <= rows:
            for i in range(len(word)):
                grid[row + i][col] = word[i]
        elif direction == 'diagonal' and row + len(word) <= rows and col + len(word) <= cols:
            for i in range(len(word)):
                grid[row + i][col + i] = word[i]

    # Fill the remaining spaces with random letters
    for r in range(rows):
        for c in range(cols):
            if grid[r][c] == ' ':
                grid[r][c] = random.choice('ABCDEFGHIJKLMNOPQRSTUVWXYZ')

    return grid

def display_word_search(grid):
    for row in grid:
        print(' '.join(row))
    print()

def play_word_search(word_search, words_to_find):
    found_words = []

    while True:
        # Display the current state of the word search
        display_word_search(word_search)

        # Ask the player for a word to find
        word_to_find = input("Enter a word to find (or 'exit' to quit): ").upper()

        # Check if the word is in the word search
        if word_to_find == 'EXIT':
            break
        elif word_to_find in found_words:
            print("You've already found that word. Try another one.")
        elif word_to_find in words_to_find:
            print(f"Congratulations! '{word_to_find}' is in the word search.")
            found_words.append(word_to_find)
        else:
            print(f"Sorry, '{word_to_find}' is not in the word search. Try again.")

        # Check if all words have been found
        if set(found_words) == set(words_to_find):
            print("Congratulations! You've found all the words.")
            break

# Example usage:
word_list = ['PYTHON', 'JAVA', 'C', 'HTML', 'CSS']
rows = 8
cols = 8

word_search_grid = generate_word_search(word_list, rows, cols)
play_word_search(word_search_grid, word_list)