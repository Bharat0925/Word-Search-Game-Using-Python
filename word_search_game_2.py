# -*- coding: utf-8 -*-
"""Word Search Game 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZdxbFBZBksujCH_b-3n3WQLgk24aaAEC
"""

import random

class WordSearch:
    def __init__(self, width, height, wordlist):
        self.width = width
        self.height = height
        self.wordlist = wordlist
        self.board = [[None for i in range(width)] for j in range(height)]

    def generate_board(self):
        # Randomly select a word from the wordlist
        word = random.choice(self.wordlist)

        # Choose a random starting position for the word
        row = random.randint(0, self.height - 1)
        col = random.randint(0, self.width - len(word) + 1)

        # Place the word on the board
        for i in range(len(word)):
            self.board[row][col + i] = word[i]

        # Fill in the rest of the board with random letters
        for i in range(self.height):
            for j in range(self.width):
                if self.board[i][j] is None:
                    self.board[i][j] = random.choice("abcdefghijklmnopqrstuvwxyz")

    def print_board(self):
        for row in self.board:
            print("".join(row))

    def is_word_found(self, word):
        # Check if the word is present in the board horizontally
        for row in range(self.height):
            for col in range(self.width - len(word) + 1):
                if self.board[row][col:col + len(word)] == list(word):
                    return True

        # Check if the word is present in the board vertically
        for col in range(self.width):
            for row in range(self.height - len(word) + 1):
                if [self.board[i][col] for i in range(row, row + len(word))] == list(word):
                    return True

        # Check if the word is present in the board diagonally
        for row in range(self.height - len(word) + 1):
            for col in range(self.width - len(word) + 1):
                if [self.board[row + i][col + i] for i in range(len(word))] == list(word):
                    return True

                if [self.board[row + i][col - i] for i in range(len(word))] == list(word):
                    return True

        return False

if __name__ == "__main__":
    # Create a word search game with a 10x10 board and a wordlist of 10 words
    game = WordSearch(10, 10, ["python", "programming", "computer", "developer", "algorithm"])

    # Generate the board
    game.generate_board()

    # Print the board
    game.print_board()

    # Ask the user to guess a word
    word = input("Guess a word: ")

    # Check if the word is found on the board
    if game.is_word_found(word):
        print("You found the word!")
    else:
        print("The word is not on the board.")